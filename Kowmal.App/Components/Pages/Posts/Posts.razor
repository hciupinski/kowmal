@page "/posts"
@using Kowmal.App.Features.GetPosts
@using Kowmal.App.Features.PublishPost
@using Kowmal.App.ViewModels
@using MediatR
@inject IMediator Mediator

@* <AuthorizeView Context="authContext"> *@
@*     <Authorized> *@
        <div>
            <MudCard>
                <MudCardHeader>
                    <MudNavLink Href="/posts/create" Icon="@Icons.Material.Filled.AdminPanelSettings">Create post</MudNavLink>
                </MudCardHeader>
                <MudTable Items="@Items" Hover="true" Breakpoint="Breakpoint.Sm" Loading="@_loading" LoadingProgressColor="Color.Info" >
                    <HeaderContent>
                        <MudTh>Name</MudTh>
                        <MudTh>Description</MudTh>
                        <MudTh>Photos</MudTh>
                        <MudTh>IsPublished</MudTh>
                        <MudTh>Action</MudTh>
                    </HeaderContent>
                    <RowTemplate>
                        <MudTd DataLabel="Name">@context.Name</MudTd>
                        <MudTd DataLabel="Description">@context.Description</MudTd>
                        <MudTd DataLabel="Photos">@context.PhotosCount</MudTd>
                        <MudTd DataLabel="IsPublished">

                            @if (context.IsPublished)
                            {
                                <MudChip Color="Color.Success">Yes</MudChip>
                            }
                            else
                            {
                                <MudChip Color="Color.Secondary">No</MudChip>
                            }
                        </MudTd>
                        <MudTd>
                            @if (!context.IsPublished)
                            {
                                <MudButton Variant="Variant.Filled" Color="Color.Dark" Class="ml-auto" OnClick="@(async () => await PublishPostAction(context.Identifier))">Publish</MudButton>
                            }
                        </MudTd>
                    </RowTemplate>
                </MudTable>

            </MudCard>
        </div>
@*     </Authorized> *@
@*     <Authorizing> *@
@*         <div>Loading...</div> *@
@*     </Authorizing> *@
@*     <NotAuthorized> *@
@*         <div>Not authenticated</div> *@
@*     </NotAuthorized> *@
@* </AuthorizeView> *@

@code {
    [Inject] ISnackbar Snackbar { get; set; }
    private bool _hidePosition;
    private bool _loading;
    private IEnumerable<PostListItemViewModel> Items = new List<PostListItemViewModel>();

    protected override async Task OnInitializedAsync()
    {
        _loading = true;
        Items = await Mediator.Send(new GetPostsQuery());
        _loading = false;
    }

    private async Task PublishPostAction(Guid identifier)
    {
        await Mediator.Send(new PublishPostRequest(identifier));
        
        Snackbar.Add("Success");

        await OnInitializedAsync();
    }
}